{"version":3,"sources":["api.js","App.js","index.js"],"names":["fetchImages","breed","a","fetch","response","json","data","message","Header","className","Image","props","url","image_src","src","alt","Loading","Gallery","urls","map","Form","onSubmit","event","preventDefault","target","elements","onFormSubmit","value","name","defaultValue","type","Main","useState","setUrls","useEffect","then","Footer","href","App","render","document","querySelector"],"mappings":"+LAIO,SAAeA,EAAtB,kC,4CAAO,WAA2BC,GAA3B,iBAAAC,EAAA,sEACoBC,MAAM,6BAAD,OACKF,EADL,sBADzB,cACGG,EADH,gBAIgBA,EAASC,OAJzB,cAIGC,EAJH,yBAKIA,EAAKC,SALT,4C,iCCDP,SAASC,IACL,OACI,wBAAQC,UAAU,uBAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,oBAAIA,UAAU,QAAd,mCAOpB,SAASC,EAAMC,GACX,IAAMC,EAAMD,EAAME,UAClB,OACI,qBAAKJ,UAAU,OAAf,SACI,qBAAKA,UAAU,aAAf,SACI,wBAAQA,UAAU,QAAlB,SACI,qBAAKK,IAAKF,EAAKG,IAAI,mBAOvC,SAASC,IACL,OAAO,2CAGX,SAASC,EAAQN,GACb,IAAQO,EAASP,EAATO,KACR,OAAY,MAARA,EACO,cAACF,EAAD,IAGP,qBAAKP,UAAU,oCAAf,SACKS,EAAKC,KAAI,SAACP,GAEP,OACI,qBAAeH,UAAU,cAAzB,SACI,cAACC,EAAD,CAAOG,UAAWD,KADZA,QAU9B,SAASQ,EAAKT,GAMV,OACI,8BACI,sBAAMU,SAPd,SAAsBC,GAClBA,EAAMC,iBACN,IAAQtB,EAAUqB,EAAME,OAAOC,SAAvBxB,MACRU,EAAMe,aAAazB,EAAM0B,QAIrB,SACI,sBAAKlB,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,yBAAQmB,KAAK,QAAQC,aAAa,QAAlC,UACI,wBAAQF,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,0BAIZ,qBAAKlB,UAAU,UAAf,SACQ,wBAAQqB,KAAK,SAASrB,UAAU,iBAAhC,6BAU5B,SAASsB,IAEL,MAAwBC,mBAAS,MAAjC,mBAAOd,EAAP,KAAae,EAAb,KAcA,OAbAC,qBAAU,WACNlC,EAAY,SAASmC,MAAK,SAACjB,GACvBe,EAAQf,QAEb,IAUC,iCACI,yBAAST,UAAU,UAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,cAACW,EAAD,CAAMM,aAVtB,SAAsBzB,GAClBD,EAAYC,GAAOkC,MAAK,SAACjB,GACrBe,EAAQf,aAWR,yBAAST,UAAU,UAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,cAACQ,EAAD,CAASC,KAAMA,WAOnC,SAASkB,IACL,OACI,wBAAQ3B,UAAU,SAAlB,SACI,sBAAKA,UAAU,4BAAf,UACI,sEACA,4BACI,mBAAG4B,KAAK,gCAAR,sCAiBLC,MAVf,WACI,OACI,gCACI,cAAC9B,EAAD,IACA,cAACuB,EAAD,IACA,cAACK,EAAD,QC9HZG,iBAAO,cAAC,EAAD,IAASC,SAASC,cAAc,e","file":"static/js/main.bdab510a.chunk.js","sourcesContent":["/**\n * 犬種の文字列を受け取り、fetch関数を使ってDog APIからその犬種の画像URLのリストを取得する\n * @param {*} breed \n */\nexport async function fetchImages(breed) {\n    const response = await fetch(\n        `https://dog.ceo/api/breed/${breed}/images/random/12`\n    );\n    const data = await response.json();\n    return data.message;\n}\n","import { useEffect, useState } from \"react\";\nimport { fetchImages } from \"./api\";\n\nfunction Header() {\n    return (\n        <header className=\"hero is-dark is-bold\">\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    <h1 className=\"title\">Cute Dog Images</h1>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nfunction Image(props) {\n    const url = props.image_src;\n    return (\n        <div className=\"card\">\n            <div className=\"card-image\">\n                <figure className=\"image\">\n                    <img src={url} alt=\"cute dog\" />\n                </figure>\n            </div>\n        </div>\n    );\n};\n\nfunction Loading() {\n    return <p>Loading...</p>;\n}\n\nfunction Gallery(props) {\n    const { urls } = props;\n    if (urls == null) {\n        return <Loading />;\n    }\n    return (\n        <div className=\"columns is-vcentered is-multiline\">\n            {urls.map((url) => {\n                // map メソッドで作られる JSX 式は、最も外側の要素に key 属性を付けなければいけない\n                return (\n                    <div key={url} className=\"column is-3\">\n                        <Image image_src={url} />\n                    </div>\n                );\n            })}\n\n        </div>\n    );\n}\n\nfunction Form(props) {\n    function handleSubmit(event) {\n        event.preventDefault();\n        const { breed } = event.target.elements;\n        props.onFormSubmit(breed.value);\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"field has-addons\">\n                    <div className=\"control is-expanded\">\n                        <div className=\"select is-fullwidth\">\n                            <select name=\"breed\" defaultValue=\"shiba\">\n                                <option value=\"shiba\">Shiba</option>\n                                <option value=\"akita\">Akita</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"control\">\n                            <button type=\"submit\" className=\"button is-dark\">\n                                Reload\n                            </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nfunction Main() {\n    // useState関数の第一戻り値: 状態の初期値、第二戻り値; 状態を更新するための関数\n    const [urls, setUrls] = useState(null);\n    useEffect(() => {\n        fetchImages(\"shiba\").then((urls) => {\n            setUrls(urls);\n        });\n    }, []);\n\n    // props.onFormSubmitとして使用する関数reloadImagesを定義\n    function reloadImages(breed) {\n        fetchImages(breed).then((urls) => {\n            setUrls(urls);\n        });\n    }\n\n    return (\n        <main>\n            <section className=\"section\">\n                <div className=\"container\">\n                    <Form onFormSubmit={reloadImages}/>\n                </div>\n            </section>\n            <section className=\"section\">\n                <div className=\"container\">\n                    <Gallery urls={urls}/>\n                </div>\n            </section>\n        </main>\n    );\n}\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"content has-text-centered\">\n                <p>Dog images are retrieved from Dog API</p>\n                <p>\n                    <a href=\"https://dog.ceo/dog-api/about\">Donate to Dog API</a>\n                </p>\n            </div>\n        </footer>\n    );\n}\n\nfunction App() {\n    return (\n        <div>\n            <Header />\n            <Main />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","import \"bulma/css/bulma.css\";\n\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#content\"));\n"],"sourceRoot":""}